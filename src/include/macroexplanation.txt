%macro cdecl 1-*.nolist     //cdecl という関数を設定, 0個以上の引数を持ちリスト出力を抑止している:展開内容が見えなくなり意図せず大きなファイルにならないようにするため(要は<1>以下を表示しない)
                            //cdecl 呼び出す関数, プッシュしたいやつをゾロゾロ並べる.....
    %rep %0 - 1             //rep(繰り返し)回数は呼び出し時の引数の数である%0から-1して（呼び出し関数の部分）繰り返す
        push %{-1:-1}       //%{-1:-1} = 引数の一番うしろ（右端）からpush
        %rotate -1          //引数を右方向に一つずらす = 上でpushした物を最も左に回す
    %endrep                 //繰り返し部分終了

    %rotate -1              //最終的に元の順番に戻す
        call %1             //呼び出したい関数を呼び出す

    %if 1 < %0              //プッシュした引数の数が1以上である場合
        add sp, (__BITS__ >> 3) * (%0 - 1)  //スタックポインタの調整も呼び出し側から行う。このマクロではNASMに組み込まれている[_BITS_]マクロを利用して16,32ビットモードの判定をする
                                            //3ビット右シフトで16 = 2, 32 = 4ビット単位でスタックポインタの調節を行えるようになる
    %endif                  //条件分岐終了
%endmacro                   //マクロ終了