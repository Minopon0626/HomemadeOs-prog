     1                                          BOOT_LOAD equ 0x7c00        ;ブートプログラムのロード位置
     2                                  
     3                                          ORG     BOOT_LOAD           ;ロードアドレスをアセンブラに指示
     4                                  
     5                                  ;****************************************************************
     6                                  ;  マクロ
     7                                  ;****************************************************************
     8                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist
     2                              <1>     %rep %0 - 1
     3                              <1>         push %{-1:-1}
     4                              <1>         %rotate -1
     5                              <1>     %endrep
     6                              <1> 
     7                              <1>     %rotate -1
     8                              <1>         call %1
     9                              <1> 
    10                              <1>     %if 1 < %0
    11                              <1>         add sp, (__BITS__ >> 3) * (%0 - 1)
    12                              <1>     %endif
    13                              <1> %endmacro
     9                                  
    10                                  ;****************************************************************
    11                                  ;  エントリポイント
    12                                  ;****************************************************************
    13                                  entry:
    14 00000000 EB58                        jmp ipl                         ;IPLへジャンプ
    15                                  
    16                                      ;-------------------------------
    17                                      ;【BPB(BIOS Parameter Block)】
    18                                      ;-------------------------------
    19 00000002 90<rept>                    times   90 - ($ - $$) db 0x90   ;
    20                                  
    21                                      ;-------------------------------
    22                                      ;【IPL(Initial Program Loader)】
    23                                      ;-------------------------------
    24                                  ipl:
    25 0000005A FA                          cli                             ; // 割込み禁止
    26                                  
    27 0000005B B80000                      mov ax, 0x0000                  ; AX = 0x0000
    28 0000005E 8ED8                        mov ds, ax                      ; DS = 0x0000
    29 00000060 8EC0                        mov es, ax                      ; ES = 0x0000
    30 00000062 8ED0                        mov ss, ax                      ; SS = 0x0000
    31 00000064 BC007C                      mov sp, BOOT_LOAD               ; SP = 0x7C00
    32                                  
    33 00000067 FB                          sti                             ; // 割込み許可
    34 00000068 8816[8400]                  mov [BOOT.DRIVE], dl
    35                                  
    36                                      ;-------------------------------
    37                                      ; 文字列を表示
    38                                      ;-------------------------------
    39                                  
    40 0000006C 68[7700]E8140083C4-         cdecl putc, .s0                ;
    40 00000074 02                 
    41                                  
    42                                      ;-------------------------------
    43                                      ; 処理の終了
    44                                      ;-------------------------------
    45 00000075 EBFE                        jmp $                           ;while(1); //(無限ループ)
    46                                  
    47 00000077 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0  ;puts関数に対してローカルラベルにDB疑似命令で文字列を定義
    47 00000080 2E0A0D00           
    48                                  
    49                                  ALIGN 2, db 0
    50                                  BOOT:                               ;ブートドライブに関する情報
    51 00000084 0000                    .DRIVE: dw 0                        ;ドライブ番号
    52                                  
    53                                  ;***********************************
    54                                  ; モジュール
    55                                  ;***********************************
    56                                  
    57                                  %include "../modules/real/putc.s"
     1                              <1> putc:
     2                              <1> 	;---------------------------------------
     3                              <1> 	; 【スタックフレームの構築】
     4                              <1> 	;---------------------------------------
     5                              <1> 											; ------|--------
     6                              <1> 											;    + 4| 出力文字
     7                              <1> 											;    + 2| IP（戻り番地）
     8 00000086 55                  <1> 	push	bp								;  BP+ 0| BP（元の値）
     9 00000087 89E5                <1> 	mov		bp, sp							; ------+--------
    10                              <1> 
    11                              <1> 	;---------------------------------------
    12                              <1> 	; 【レジスタの保存】
    13                              <1> 	;---------------------------------------
    14 00000089 50                  <1> 	push	ax
    15 0000008A 53                  <1> 	push	bx
    16 0000008B 56                  <1> 	push    si
    17                              <1> 
    18                              <1> 	;---------------------------------------
    19                              <1> 	; 【引数の取得】
    20                              <1> 	;---------------------------------------
    21                              <1> 
    22 0000008C 8B7604              <1> 	mov si, [bp + 4]						; 出力文字を取得, SI = 文字列へのアドレス
    23                              <1> 
    24                              <1> 	;---------------------------------------
    25                              <1> 	; 【処理の開始】
    26                              <1> 	;---------------------------------------
    27 0000008F B40E                <1> 	mov		ah, 0x0E						; テレタイプ式1文字出力
    28 00000091 BB0000              <1> 	mov		bx, 0x0000						; ページ番号と文字色を0に設定
    29 00000094 FC                  <1> 	cld									    ; DF = 0（文字列のインクリメント方向は前方向）//アドレス加算
    30                              <1> .10L:										;do {
    31 00000095 AC                  <1> 	lodsb									; AL = [SI], SI = SI + 1 //AL = *SI++;
    32                              <1> 											;
    33 00000096 3C00                <1> 	cmp al, 0								; if (0 == AL)  //文字列の終端かどうかをチェック
    34 00000098 7404                <1> 	je .10E									;   break;      //文字列の終端ならば終了
    35                              <1> 											;
    36                              <1> 											;
    37 0000009A CD10                <1> 	int		0x10							; BIOS呼び出し Int10(0x0E, AL); //文字の出力
    38 0000009C EBF7                <1> 	jmp		.10L							; } while (1);
    39                              <1> .10E:										;end
    40                              <1> 
    41                              <1> 	;---------------------------------------
    42                              <1> 	; 【レジスタの復帰】
    43                              <1> 	;---------------------------------------
    44 0000009E 5E                  <1> 	pop		si
    45 0000009F 5B                  <1> 	pop		bx
    46 000000A0 58                  <1> 	pop		ax
    47                              <1> 
    48                              <1> 	;---------------------------------------
    49                              <1> 	; 【 スタックフレームの破棄】
    50                              <1> 	;---------------------------------------
    51 000000A1 89EC                <1> 	mov		sp, bp							;
    52 000000A3 5D                  <1> 	pop		bp
    53                              <1> 
    54 000000A4 C3                  <1> 	ret
    58                                  
    59                                  ;***********************************
    60                                  ;   ブートフラグ(先頭512バイトの終了)
    61                                  ;***********************************
    62 000000A5 00<rept>                    times 510 - ($ - $$) db 0x00
    63 000001FE 55AA                        db 0x55, 0xAA
