putc:
	;---------------------------------------
	; 【スタックフレームの構築】
	;---------------------------------------
											; ------|--------
											;    + 4| 出力文字
											;    + 2| IP（戻り番地）
	push	bp								;  BP+ 0| BP（元の値）
	mov		bp, sp							; ------+--------

	;---------------------------------------
	; 【レジスタの保存】
	;---------------------------------------
	push	ax
	push	bx
	push    si

	;---------------------------------------
	; 【引数の取得】
	;---------------------------------------

	mov si, [bp + 4]						; 出力文字を取得, SI = 文字列へのアドレス

	;---------------------------------------
	; 【処理の開始】
	;---------------------------------------
	mov		ah, 0x0E						; テレタイプ式1文字出力
	mov		bx, 0x0000						; ページ番号と文字色を0に設定
	cld									    ; DF = 0（文字列のインクリメント方向は前方向）//アドレス加算
.10L:										;do {
	lodsb									; AL = [SI], SI = SI + 1 //AL = *SI++;
											;
	cmp al, 0								; if (0 == AL)  //文字列の終端かどうかをチェック
	je .10E									;   break;      //文字列の終端ならば終了
											;
											;
	int		0x10							; BIOS呼び出し Int10(0x0E, AL); //文字の出力
	jmp		.10L							; } while (1);
.10E:										;end

	;---------------------------------------
	; 【レジスタの復帰】
	;---------------------------------------
	pop		si
	pop		bx
	pop		ax

	;---------------------------------------
	; 【 スタックフレームの破棄】
	;---------------------------------------
	mov		sp, bp							;
	pop		bp

	ret